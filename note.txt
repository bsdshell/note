// this is old note file 
// new note file is moved to /Library/WebServer/Documents/tiny3/noteindex.txt
// last update: Wed Nov  2 13:51:22 PDT 2016

*Regular Expression [:help pattern]*
* zero or more
+ one or more
? zero or one
*? zero or more non-greedy
+? one or more non-greedy
:echo synIDattr(hlID('Normal'), 'bg#')              // get backgroun color from Normal color group

//vim command
=i{     // indent inner block[inside the bracket]
=a{     // indent a block [include the bracket] 
=2a{    // indent two blocks[ this block and cointaining block ]
>i{     // increase indent for inner block
<i{     // decrease indent for inner block
=%      // indent the block with cursor on { or }

        


[-./[:alnum:]_~]\+      // filename regex

vim function
let list = readfile(filename)       // read file line by line
================================================================================
NSLog(@"CHAR_MIN:   %c",   CHAR_MIN);
NSLog(@"CHAR_MAX:   %c",   CHAR_MAX);
NSLog(@"SHRT_MIN:   %hi",  SHRT_MIN);    // signed short int
NSLog(@"SHRT_MAX:   %hi",  SHRT_MAX);
NSLog(@"INT_MIN:    %i",   INT_MIN);
NSLog(@"INT_MAX:    %i",   INT_MAX);
NSLog(@"LONG_MIN:   %li",  LONG_MIN);    // signed long int
NSLog(@"LONG_MAX:   %li",  LONG_MAX);
NSLog(@"ULONG_MIN not defined, it's always zero: %lu", 0);
NSLog(@"ULONG_MAX:  %lu",  ULONG_MAX);   // unsigned long int
NSLog(@"LLONG_MIN:  %lli", LLONG_MIN);   // signed long long int
NSLog(@"LLONG_MAX:  %lli", LLONG_MAX);
NSLog(@"ULLONG_MIN not defined, it's always zero: %llu", 0);
NSLog(@"ULLONG_MAX: %llu", ULLONG_MAX);  // unsigned long long int
================================================================================
UIBezierPath* path = [UIBezierPath bezierPathWithRoundedRect:rect cornerRadius:0];
[_shapeLayer setFrame:rect];
_shapeLayer.path = [path CGPath];
_shapeLayer.strokeColor = [[UIColor greenColor]CGColorRef];
_shapeLayer.fillColor = [[UIColor greenColor]CGColorRef];
_shapeLayer.lineWidth = 2;
[_shapeLayer setShadowPath:[path CGPath]];
//_shapeLayer.shouldRasterize = YES;
//[_shapeLayer setRasterizationScale:[UIScreen mainScreen].scale];
//[_shapeLayer setShadowOpacity:0.6];

//    for(CALayer* layer in myView.layer.sublayers){
//        [layer removeFromSuperlayer];
//    }
[myView.layer addSublayer:_shapeLayer];
================================================================================
        ================================================================================
NSString* firstString = @"first";
NSString* concatstring = [firstString stringByAppendingString:@"appending string"];              // appending string to other string
// concatstring = "firstappending string";
================================================================================
NSString* fullPath = @"/home";
NSString* fullPathFileName = [fullPath stringByAppendingPathComponent:@"fileName.txt"];              // appending string to other string
//fullPathFileName -> /home/fileName.txt

================================================================================
NSString* baseName = [imageFileName stringByDeletingPathExtension]; //myimage.png -> myimage         //delete extension
“/tmp/scratch.tiff” -> “/tmp/scratch”
“/tmp/”             -> “/tmp”
“scratch.bundle/”   -> “scratch”
“scratch..tiff”     -> “scratch.”
“.tiff”             -> “.tiff”
“/”                 -> “/”
================================================================================
NSString fullPathFileThumbEncrypt = "/home/dog/image.txt";
NSString* thumbName                = [fullPathFileThumbEncrypt lastPathComponent];  //get last component of a path
//thumbName = "image.txt"

================================================================================
NSString* path = "/home/dog";
NSArray* array = [path pathComponents];
array[0] = "/"
array[1] = "home"
array[2] = "dog"

NSString* path = "home/dog";
NSArray* array = [path pathComponents];
array[0] = "home"
array[1] = "dog"

================================================================================
NSString* mystring = @"home_dog_cat";
NSArray* componentArray = [mystring componentsSeparateByString:@"_"];

================================================================================
NSString* stringFormat = @"file_%u.txt";
int num = 10;
NSString* fileName = [NSString stringWithFormat:stringFormat, num]; // int to string
NSString* str5     = [NSString stringWithFormat:@"%d", 100];
//fileName = @"file_10.txt";
================================================================================
// show two dicimal places 
[NSString stringWithFormat:@"[%.02f][%.02f]", touchXY.x, touchXY.y]; 
================================================================================
NSString* path = "/home/dog/file.txt";
NSString* extension = [path pathExtension];
//extension = "txt"

NSString* path = "/home/dog/file..txt";
//extension = "txt"

NSString* path = "/home/dog/file/";
//extension = ""

================================================================================
UITabBarController reload problem
- (void)viewWillAppear:(BOOL)animated                                                            // The method will be callen when tabbar is switched
Use [[self tableView] reloadData]; to reload data

================================================================================
// object hash value
NSString* str5    = [NSString stringWithFormat:@"%d", 100];
NSLog(@"str5.hash = [%lu]", [str5 hash]);

================================================================================
NSString* strInt = @"123";                                                                       // Convert NSString to int
int intValue     = [strInt intValue];

================================================================================
NSNumberFormatter *numberFormatter = [[NSNumberFormatter alloc] init];                           // Convert NSString to NSNumber
[numberFormatter setNumberStyle:NSNumberFormatterDecimalStyle];
NSNumber* myNumber = [numberFormatter numberFromString:@"123"];
[numberFormatter release];

================================================================================
NSUserDefaults* defaultUser1 = [NSUserDefaults standardUserDefaults];
NSArray* nsarray  = [[NSArray alloc] initWithObjects:@"str1", @"str2", nil];
[defaultUser1 setObject:nsarray forKey:@"nskey"];
NSMutableArray* mynsarray = [defaultUser1 objectForKey:@"nskey"];

for(NSMutableArray* arr in mynsarray){
    NSLog(@"arr=[%@]", arr);
}
--------------------------------------------------------------------------------

NSString* key = @"k1";
NSString* strValue = [Dictionary objectForKey:key];
NSMutableSet* set = [[NSMutableSet alloc]init];
NSString* elem1 = @"str1";
NSString* elem2 = @"str2";

[set addObject:elem1];
[set addObject:elem2];
[set removeObject:elem1];
XCTAssert([set count] == 1);

NSMutableSet* set1 = [NSMutableSet setWithObjects:@"obj1", @"obj2", @"obj3", nil];
XCTAssert([set1 count] == 3);

NSMutableSet* set2 = [NSMutableSet setWithCapacity:2];
[set2 addObject:@"obj1"];
[set2 addObject:@"obj2"];

// Predicate in NSMutableSet
NSMutableSet* set3 = [NSMutableSet setWithObjects:@"Google", @"God", @"odd", nil];
NSPredicate* startWithG = [NSPredicate predicateWithBlock:
                           ^BOOL(id evaluatedObject, NSDictionary* bindings){
                               if([evaluatedObject hasPrefix:@"G"]){
                                   return YES;
                               }else{
                                   return NO;
                               }
                           }];
[set3 filterUsingPredicate:startWithG];
XCTAssertTrue([set3 count] == 2);

NSMutableSet* set4 = [NSMutableSet setWithObjects:@"Google", @"God", @"odd", nil];
NSArray* array = [set4 allObjects];
for(NSString* str in array){
    if([str hasPrefix:@"G"]){
        NSLog(str);
        [set4 removeObject:str];
    }
}

NSMutableSet* set11 = [NSMutableSet setWithObjects:@"Google", @"God", @"odd", nil];
NSMutableSet* set12 = [NSMutableSet setWithObjects:@"Facebook", @"Apple", @"MS", nil];
NSMutableSet* result = [NSMutableSet setWithCapacity:10];

[result unionSet:set11];
[result unionSet:set12];

[result intersectSet:set11];

[result minusSet:set11];

NSCountedSet* countedSet = [NSCountedSet setWithCapacity:5];
[countedSet addObject:@"dog"];
[countedSet addObject:@"cat"];
[countedSet addObject:@"dog"];
================================================================================
NSNumber* nsnumber = [NSNumber numberWithInteger:123];                                           // Convert NSNumber to NSString
NSString* numString = [nsnumber stringValue];

NSString* nstring = [NSString stringWithFormat:@"%d", (int)nsinteger];

UIImageView *imageView = [[UIImageView alloc]initWithFrame:self.window.bounds];                 // Add image as main screen in UIApplication
imageView.image=[UIImage imageNamed:@"image.png"];
[self.window addSubview:imageView];
================================================================================
UIImageView *imageView = [[UIImageView alloc]initWithFrame:self.window.bounds];                 // Draw circle on top of image/UIImageView
imageView.image=[UIImage imageNamed:@"image.png"];
CAShapeLayer* circleLayer = [CAShapeLayer layer];
CGFloat leftX = 100.0f;
CGFloat leftY = 100.0f;
CGFloat Width = 200.0f;
CGFloat Height = 200.0f;
UIBezierPath* path = [UIBezierPath bezierPathWithOvalInRect:CGRectMake(leftX, leftY, Width, Height)];
[circleLayer setPath:[path CGPath]];
CGFloat component[4];
component[0] = 100.0;
component[1] = 1.0;
component[2] = 2.0;
component[3] = 2.0;
CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();
[circleLayer setStrokeColor:CGColorCreate(colorSpace, component)];
[circleLayer setLineWidth:1.0f];
[circleLayer setFillColor:[[UIColor blueColor] CGColor]];
[[imageView layer] addSublayer:circleLayer];
================================================================================
UIBarButtonItem title font size
--------------------------------------------------------------------------------
UIBarButtonItem* deleteItem = [[UIBarButtonItem alloc] initWithTitle:@"Delete" 
        style:UIBarButtonItemStyleBordered target:self action:@selector(deleteImageButton:)];
UIFont* font = [UIFont boldSystemFontOfSize:18.0f];
NSDictionary* attribute = @{NSFontAttributeName: font};
[deleteItem setTitleTextAttributes:attribute forState:UIControlStateNormal];

================================================================================
- (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event{
    NSLog(@"%s", __PRETTY_FUNCTION__);
    UITouch* touch = [touches anyObject];
    if(touch != nil){
        _initXY = [touch locationInView:touch.view];
        NSString* mytext = [NSString stringWithFormat:@"[%.01f][%.01f]", _initXY.x, _initXY.y];
        [_myLabel setText:mytext];
    }
}
- (void)touchesMoved:(NSSet *)touches withEvent:(UIEvent *)event{
    UITouch* touch = [touches anyObject];
    if(touch != nil){
        CGPoint currXY = [touch locationInView:touch.view];
        NSString* mytext = [NSString stringWithFormat:@"[%.01f][%.01f]", currXY.x, currXY.y];
        _center.x = _center.x + (currXY.x - _initXY.x); 
        _center.y = _center.y + (currXY.y - _initXY.y); 

        UIBezierPath* path = [UIBezierPath bezierPathWithOvalInRect:CGRectMake(_center.x-50, _center.y-50, 100, 100)];
        [_circleLayer setPath:[path CGPath]];
        [_circleLayer setFillColor:[[UIColor brownColor] CGColor]];
        [_myLabel setText:mytext];
        _initXY = currXY;
    }
}
- (void)touchesEnded:(NSSet *)touches withEvent:(UIEvent *)event{
    NSLog(@"%s", __PRETTY_FUNCTION__);
    UITouch* touch = [touches anyObject];
    if(touch != nil){
        CGPoint touchXY = [touch locationInView:touch.view];
        NSString* mytext = [NSString stringWithFormat:@"[%.01f][%.01f]", touchXY.x, touchXY.y];
        [_myLabel setText:mytext];
    }
}
================================================================================
// draw rectangle
-(CAShapeLayer*)drawRectangle:(CGPoint) location semiWidth:(CGFloat) semiWidth semiHeight:(CGFloat)semiHeight{
    CAShapeLayer* shapeLayer = [CAShapeLayer layer];
    UIBezierPath* path = [UIBezierPath bezierPath];
    
    // start point
    [path moveToPoint:CGPointMake(location.x - semiWidth, location.y - semiHeight)];
    
    // draw lines
    [path addLineToPoint:CGPointMake(location.x + semiWidth, location.y - semiHeight)];
    [path addLineToPoint:CGPointMake(location.x + semiWidth, location.y + semiHeight)];
    [path addLineToPoint:CGPointMake(location.x - semiWidth, location.y + semiHeight)];
    [path addLineToPoint:CGPointMake(location.x - semiWidth, location.y - semiHeight)];
    //[path closePath];
    
    shapeLayer.path = [path CGPath];
    
    shapeLayer.strokeColor = [[UIColor yellowColor] CGColor];
    shapeLayer.fillColor = [[UIColor blackColor] CGColor];
    shapeLayer.lineWidth = 1.0;
    return shapeLayer;
}
================================================================================
NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
NSString *documentsDirectory = [paths objectAtIndex:0];
NSString *logPath = [documentsDirectory stringByAppendingPathComponent:@"xoutput.log"];             //append file to path
//NSString *logPath = @"/Users/cat/try/xoutput.log
NSLog(@"redirecting STDERR: %@", logPath);
freopen([logPath cStringUsingEncoding:NSASCIIStringEncoding],"a+",stderr);
================================================================================
OpenES/OpenGL is like a state machine
OpenGL/OpenES has three primitives: point, line and triangle
Each point is formed by one vertex
Each line is formed by two vertices
Each triangle is formed by three vertices
Vertex Shader/Fragment Shader
Vertex Shader and Fragment Shader is like a little program, it run inside the GPU
Frame Buffer, Render Buffer, Depth Buffer, Stencil Buffer

================================================================================
self.screenSize = [UIScreen mainScreen].bounds.size; // screen size

================================================================================
format string formatting
--------------------------------------------------------------------------------
// one decimal for float
NSString* strFormat = [NSString stringWithFormat:@"[%.01f][%.01f]", xcolor.blue, xcolor.alpha];
--------------------------------------------------------------------------------
%@ Objective-C object, printed string returned by descriptionWithLocale
%% '%' character.
%d, %D Signed 32-bit integer (int).
%u, %U Unsigned 32-bit integer (unsigned int).
%x Unsigned 32-bit integer (unsigned int), printed in hex using 0–9 and a–f.
%X Unsigned 32-bit integer (unsigned int), printed in hex using 0–9 and A–F.
%o, %O Unsigned 32-bit integer (unsigned int), printed in octal.
%f 64-bit float (double).
%e 64-bit float (double), e exponent.
%E 64-bit float (double), E exponent.
%g 64-bit float (double), %e if exponent < – 4 or >= to the precision, %f o.w.
%G 64-bit float (double), %E if exponent < – 4 or >= to the precision, %f o.w.
%c 8-bit unsigned character
%C 16-bit Unicode character
%s Null-terminated array of 8-bit unsigned characters.
%S Null-terminated array of 16-bit Unicode characters.
%p Void pointer (void *), printed in hex with the digits 0–9 and a–f, with a leading 0x.
%a 64-bit float, leading 0x and one hex before decimal pt using p as exp.
%A 64-bit float, leading 0X and one hex before decimal pt using P as exp.
%F 64-bit float, printed in decimal notation.
%d bool stype

================================================================================
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang

================================================================================
// draw circle[location and radius]
- (CAShapeLayer*)drawCircle:(CGPoint)location radius:(CGFloat)radius {
CAShapeLayer* shapeLayer = [CAShapeLayer layer];

UIBezierPath *path = [UIBezierPath bezierPath];
[path addArcWithCenter:location
                radius:radius
            startAngle:0.0
              endAngle:M_PI * 2.0
             clockwise:YES];

shapeLayer.path = [path CGPath];
shapeLayer.strokeColor = [[UIColor redColor] CGColor];
shapeLayer.fillColor = nil;
shapeLayer.lineWidth = 5.0;
return shapeLayer;
}

================================================================================
// draw oval[location and semiMajor and semiMinor]
-(CAShapeLayer*)drawOval:(CGPoint) location semimajor:(CGFloat)semimajor semiminor:(CGFloat) semiminor{
CAShapeLayer* shapeLayer = [CAShapeLayer layer];

UIBezierPath *path = [UIBezierPath bezierPathWithOvalInRect:CGRectMake(location.x-semimajor, location.y-semiminor, 2*semimajor, 2*semiminor)];

shapeLayer.path = [path CGPath];

shapeLayer.strokeColor = [[UIColor greenColor] CGColor];
shapeLayer.fillColor = [[UIColor blackColor] CGColor];
shapeLayer.lineWidth = 1.0;
return shapeLayer;
}
// draw rectangle[location semiWith and semiHeight]
-(CAShapeLayer*)drawRectangle:(CGPoint) location semiWidth:(CGFloat) semiWidth semiHeight:(CGFloat)semiHeight{
CAShapeLayer* shapeLayer = [CAShapeLayer layer];
UIBezierPath* path = [UIBezierPath bezierPath];

// start point
[path moveToPoint:CGPointMake(location.x - semiWidth, location.y - semiHeight)];

// draw lines
[path addLineToPoint:CGPointMake(location.x + semiWidth, location.y - semiHeight)];
[path addLineToPoint:CGPointMake(location.x + semiWidth, location.y + semiHeight)];
[path addLineToPoint:CGPointMake(location.x - semiWidth, location.y + semiHeight)];
[path addLineToPoint:CGPointMake(location.x - semiWidth, location.y - semiHeight)];
//[path closePath];

shapeLayer.path = [path CGPath];

shapeLayer.strokeColor = [[UIColor yellowColor] CGColor];
shapeLayer.fillColor = [[UIColor blackColor] CGColor];
shapeLayer.lineWidth = 1.0;
return shapeLayer;
}
================================================================================
// *.h
UIImageView* _imageView;
@property (nonatomic, retain) UIImageView* imageView;

// *.m
@synthesize imageView = _imageView;

self.imageView = [[UIImageView alloc]initWithFrame:self.window.bounds];
self.imageView.image=[UIImage imageNamed:@"myimage.jpg"];
[self.window addSubview:self.imageView];

================================================================================
// create simple text label
UILabel *myLabel = [[UILabel alloc] initWithFrame:CGRectMake(50, 50, 300, 300)];
[myLabel setTextColor:[UIColor redColor]];
[myLabel setBackgroundColor:[UIColor clearColor]];
[myLabel setFont:[UIFont fontWithName: @"Trebuchet MS" size: 20.0f]];
[myLabel setText:@"Supper Simple Application"];
[self.window addSubview:myLabel];

================================================================================
    // new line on UILabel text
UILabel *myLabel = [[UILabel alloc] initWithFrame:CGRectMake(5, 30, 300, 300)];
myLabel.numberOfLines = 0;						// new line
[myLabel setTextColor:[UIColor yellowColor]];
[myLabel setBackgroundColor:[UIColor clearColor]];
[myLabel setFont:[UIFont fontWithName: @"Trebuchet MS" size: 12.0f]];
[myLabel setText:@"Remove old label and add new label \\nwith removeFromSuperView"];
[self.view addSubview:myLabel];

================================================================================
CGRect frame;
frame = CGRectMake(100, 100, 100, 50);

================================================================================
SubClass* sub = [[SubClass alloc]init];
TestClass* tt = [[TestClass alloc]init];

if([tt isKindOfClass:[SubClass class]]){
    NSLog(@"tt is SubClass"); 
}

if([sub isKindOfClass:[TestClass class]]){
    NSLog(@"sub is TestClass"); 
}
</xcode snippet>


</java code>

<visual_studio shortcut key>
    ALT Shift Enter maximize code window
    CTRL-Tab        show tab files
    CTRL -          navigate backward
    CTRL Shift -    navigate forward
    CTRL g          goto line number
    Shift F12       find all references
    CTRL-Delete     delete word to right of cursor
    CTRL-BackSpace  delete word to left of cursor
    CTRL W          highlight word
    CTRL M + O      collapse all
    CTRL M + L      expand all
    CTRL M + M      expand/collapse the current region
    CTRL K + K      toggle bookmark
    CTRL K + N      next bookmark
    CTRL K + P      previous bookmark
    CTRL E          Recent files
    Shift CTRL + }  Select block code curly bracket
    CTRL + }        Jump to { or }
</visua_studio>

<book math>
    http://www.liafa.jussieu.fr/~jep/PDF/MPRI/MPRI.pdf
    http://www.math.brown.edu/~jhs/Presentations/WyomingEllipticCurve.pdf
    http://swtch.com/~rsc/regexp/regexp1.html
    http://glyphicons.com
    http://www.math.sjsu.edu/~alperin/pt.pdf
    http://theory.caltech.edu/~chan/Ph129b/sol3.pdf
    http://www.math.uh.edu/~wagner/2331/Schurs_theorem.pdf
    http://www.mathpuzzle.com/
</book>

</java antlr>
    java -cp /usr/local/lib/antlr-4.0-complete.jar:. Test
<java antlr>

<csharp c#>
    ================================================================================
    list skip: listskip
    --------------------------------------------------------------------------------
    var list = new[] { "dog", "cow", "cat" };
    System.Console.WriteLine(string.Join(",", list));
    var list1 = list.Skip(1);
    System.Console.WriteLine(string.Join(",", list1));
    //"cow", "cat"
    System.Console.ReadLine();

    ================================================================================
    dictionary uses for loop
    --------------------------------------------------------------------------------
    for (int index = 0; index < dictionary.Count; index++) {
      var item = dictionary.ElementAt(index);
      var itemKey = item.Key;
      var itemValue = item.Value;
    }
</csharp>

<latex>
    // greek letter
    \langle \vec{v_1} \vec{v_2} \rangle            // inner product
    \overline{\langle \vec{v_1} \vec{v_2} \rangle} // conjugate inner product
    \iff                                           // if and only if
    \Rightarrow                                    // imply
    \vec{v_3^\ast}                                 // conjugation

    \alpha        \theta                  \tau       \\
    \beta         \vartheta    \pi          \upsilon \\
    \gamma        \gamma       \varpi       \phi     \\
    \delta        \kappa       \rho         \varphi  \\
    \epsilon      \lambda      \varrho      \chi     \\
    \varepsilon   \mu          \sigma       \psi     \\
    \zeta         \nu          \varsigma    \omega   \\
    \eta          \xi                                \\
                                                     \\
    \Gamma        \Lambda      \Sigma       \Psi     \\
    \Delta        \Upsilon     \Omega                \\
    \Theta        \Pi          \Phi

</latex>

<octopress>
    link code from local dir

    1. edit source/_posts/xxx.markdown
    2. add absoluate path to code
    3. rake generate
    4. copy octopress/* to /var/www/octopress
    5. Fixed relative path {% include_code java/Count.java %} from source/_post/xxx.markdown file
    6. Fixed github gist
    7. Installed Kramdown for latex

    rake 'new_post[title]'

    put image file in  zsurface/public/images
    {% img  center /images/torus.png 400 400 %}
</octopress>

<java snippet>
----------------------------------------------------------------------------------- 
// print all substring
public static List<String> allSubString(String str) {
    List<String> list = new ArrayList<String>(); 
    int len = str.length();
    for(int i=0; i<len; i++){
        for(int j=i; j<len; j++){
            String substr = str.substring(i, j+1);
            list.add(substr);
        }
    }
    return list;
}
----------------------------------------------------------------------------------- 
    int array[][] = new int[][]{
    { 1, 2, 3, 4, 5 },
    { 1, 2, 3, 4, 5 },
    { 1, 2, 3, 4, 5 },
    { 1, 2, 3, 4, 5 }
    };
----------------------------------------------------------------------------------- 
int[] array = {1, 2, 3}; 
int[][]  array2 = {{1, 2, 3},
                   {4, 5, 6}};
// ArrayList
ArrayList<String> alist = new ArrayList<String>(); 
alist.add("dog");
alist.add("cat");

// ArrayList 2D
ArrayList<ArrayList<String>> list2d = new ArrayList<ArrayList<String>>();
list2d.add(alist);

// List
List<String> list = new ArrayList<String>();
list.add("eloberate");
list.add("continue");
list.add("continuous");

// Vector
Vector<String> vector = new Vector<String>();
vector.add("jobs");
vector.add("career");
vector.add("motivation");
vector.add("ambition");

// LinkedList
LinkedList<Integer> linkedList = new LinkedList<Integer>();
linkedList.add(1);
linkedList.add(2);

// Queue
Queue<Integer> queue = new LinkedList<Integer>();
queue.add(1);
queue.add(2);
queue.remove();
if(queue.peek() == 2)
    System.out.println("top element is :" + 2);  

// LinkedBlockingDeque
// blocking, use lock in the implementation
Deque<String> blockingDeque = new LinkedBlockingDeque<String>();
blockingDeque.addFirst("first");
blockingDeque.addLast("last");

// ConcurrentLinkedDeque
// non-blocking
Deque<String> concurrentDeque = new ConcurrentLinkedDeque<String>();
concurrentDeque.addFirst("first");
concurrentDeque.addLast("last");

// HashMap
Map<String, Integer> map = new HashMap<String, Integer>();
map.put("cat", 1);
map.put("dog", 2);

String key = "cat";
Integer value = map.get(key);
if(value != null){
    value = map.get(key);
    System.out.println("key=" + key + " value=" + value); 
}

if(map.containsKey(key))
    System.out.println("map contains key=" + key); 

// List as Value in HashMap
Map<String, List<String>> mapList = new HashMap<String, List<String>>();
mapList.put("1", Arrays.asList("dog", "cat", "cow"));
mapList.put("2", Arrays.asList("C++", "Java", "Haskell"));
mapList.put("3", Arrays.asList("Scala", "Python", "Ruby"));

for(Map.Entry<String, List<String>> entry: mapList.entrySet()){
    String myKey = entry.getKey();
    List<String> myList = entry.getValue();
    for(String elem: myList){
        System.out.println("myKey=" + myKey + " list=" + elem); 
    }
}

if(mapList.containsKey("key")){
    System.out.println("contains key");
}

List<String> list = mapList.get("key");
int size = mapList.size();
if(mapList.containsValue("1")){
    System.out.println("contains value");
}

List<String> mylist =  mapList.values();
for(String str:mylist){
    System.out.println("str=" + str);
}


// HashSet
Set<Integer> set = new HashSet<Integer>(Arrays.asList(1, 2));
Integer item = 1;
if(set.contains(item))
    System.out.println("set contains element:" + 1);


for(Integer n : set){
    System.out.println("n=:" + n);
}

set.remove(item);
int size = set.size();
System.out.println("size =" + set.size()); 

// iterate set
for(Integer elem: set){
    System.out.println("for elem:=" + elem); 
}

// set to array
Integer[] array = (Integer[]) set.toArray(new Integer[set.size()]);
for(Integer n: array){
    System.out.println("n=:" + n);
}

Iterator<Integer> iterator = set.iterator();
while(iterator.hasNext()){
    System.out.println("Iterator elem:=" + iterator.next()); 
}

List<String> list1 = new ArrayList<String>();
List<String> list2 = new LinkedList<String>();
List<String> list3 = new Stack<String>();
List<String> list4 = new Vector<String>();
Queue<String> queue = new ArrayList<String>();
Queue<String> queue2 = new PriorityQueue<String>();
</java snippet>

<c# snippet>
</c# snippet>
    ====================================================================================
    Control Validating event
    --------------------------------------------------------------------------------
    TextBox textbox = new TextBox()
    textbox.Validating += ValidationRule                    // Register event handler

    private void ValidationRule(object sender, EventArg e)
    { //define your validation rules }
    --------------------------------------------------------------------------------

--------------------------------------------------------------------------------
<gpg_encryption>
tar -czf myencrypt.tar.gz myencrypt
tar -xzf myencrypt.tar.gz
gpg -c myencrypt.tar.gz
gpg -c -o myencrypt.tar.gz myencrypt.tar.gz.gpg
</gpg_encryption>
================================================================================
Algebraic Curve in Projective Plane
Point on Projective Plane
(X, Y, Z) ~ (aX, aY, aZ) a != zero
Embed Affine plane to projective plane
Add infinite line (x:y:0)
Embed (x:y)->(1:x:z)
Embed (x:y)->(x:1:z)
Embed (x:y)->(x:y:1)

F(X, Y, Z) = 0
X = aX', Y = aY', Z = aZ'
F(aX', aY', aZ') = a^nF(X', Y', Z') = 0
If F(X', Y', Z') => a^nF(X', Y', Z') = 0

Any affine curve C can be extended to projective plane curve by following process
F(X, Y) = 0
Z^nF(X/Z, Y/Z) = 0, Let Z != 0
e.g. X^2 + y  + 3 = 0
     (X/Z)^2 + Y/Z + 3 = 0
    =>X^2 + ZY + 3Z^2 = 0
      Add (X:Y:0) as infinite line

================================================================================
([1, 2, 3, 0, 5]U{Infinite}, max, +, 0, 1)
max is associative
+ is associative
0 is the identify of +
since a = a + 0

Infinite is annihilator for max
Infinite = max(Infinite, a)

m = max(1, 2)
2 = max(2, 0)
2 = max(0, 2)
    max(max(a, b), c) = max(a, max(b, c))
    3 = 3 + 0
    3 = 0 + 3

================================================================================
new word of the data
snap [ ] say something quickly and irritably to someone, snapped at her  
snapshot, snapchat
snapper [ ] a marine fish that is typically reddish and is valued as food

================================================================================
install haskell web framework snap
cabal upgrade
cabal install snap
--------------------------------------------------------------------------------
change haskell verion
ghc -v
there are two major pieces: GHC and Haskell Platform
They are installed respectively in:
/Library/Frameworks/GHC.framework
/Library/Haskell
Executables are symlinked in /usr/bin/ and should be avaiable in any shell

How to uninstall different Haskell GCH versions:
/Library/Haskell/bin/uninstall-hs
e.g ./uninstall-hs thru --remove 7.8.3 [option --remove is remove files]
--------------------------------------------------------------------------------
cabal update            Install the latest version of each package
cabal sandbox init      To prevent version incompatibility with earlier installed packages
cabal install foo
cabal install foo-1.0   Specific version of a package
--------------------------------------------------------------------------------
Google just release a new compression [algo called Brotli], [which] the company hope 
will [reduce(speed up)] the web browsing by [shrinking] images, web fonts, other other
content
--------------------------------------------------------------------------------
install homebrew in Mac
ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
use homebrew to install Haskell
brew install ghc

// install cabal from brew
brew install cabal-install

// use cabal install packages
cabal install cabal-install
I spend many hours on the Haskell framework, and still can't resolve the package dependency hell
--------------------------------------------------------------------------------
Run simulator in command line
// display all the simulators device
instruments -w help
--------------------------------------------------------------------------------

// visual_studio shortcut key>
ALT Shift Enter maximize code window
CTRL-Tab        show tab files
CTRL -          navigate backward
CTRL Shift -    navigate forward  
CTRL g          goto line number
Shift F12       find all references
CTRL-Delete     delete word to right of cursor 
CTRL-BackSpace  delete word to left of cursor 
CTRL W          highlight word
CTRL M + O      collapse all
CTRL M + L      expand all
CTRL M + M      expand/collapse the current region
CTRL K + K      toggle bookmark 
CTRL K + N      next bookmark 
CTRL K + P      previous bookmark 
CTRL E          Recent files
Shift CTRL + }  Select block code curly bracket
CTRL + }        Jump to { or }

// python>
mode	description
r	read in text mode
w	write in text mode, overwrite old file if exists
a	append in text mode
r+	read and write
w+	read and write, overwrite old file/create file
a+	read and append
rb	read in binary mode
wb	write in binary mode, overwrite old file if exists
ab	append in binary mode
rb+	read and write in binary mode
wb+	write and read in binary mode, overwrite old file if exists
ab+	append and read in binary mode

python -m pdb script.py          // debug python
str = str.strip(' \r\n\t')       // trim whitespace
str = str.ltrip(' \r\n\t')       // trim the left side of str
str = str.rtrip(' \r\n\t')       // trim the right side of str
is_number(mystring)              // convert string to number/integer
arglist = sys.argv;              // argument list
arglist[0]                       // first argument which is the script name
len(mystring)                    // length of string
len(list)                        // number of element inside the list
mylist = []                      // create list
handler = open(fileName, "r+")   // open file for read
int(str)                         // convert string to integer
list.pop(0)                      // Delete first element from list
list.append("str")               // Append str to list
basename = ntpath.basename(path) // Basename of path
os.path.basename("/dog/dog/dog.txt") //import os;
pair = os.path.splitext("file.txt")  // pair[0] = file  pair[1]=".txt" 
str(num)                         // Integer to String 
os.getcwd()                      


